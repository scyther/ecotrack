type Packaging @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  carbonFootprint: Float
  quality: String
}

type Material @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  carbonFootprint: Float
  quality: String
}

type Categories @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
}

type ImpactProduct @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  brand: String
  totalCarbonFootprint: Float
  materialsUsed: String
  packagingUsed: String
  logistics: String
  waterConsumption: Float
  energyUsed: String
  date: String
  energyFP: Float
}

type Locations @model @auth(rules: [{allow: public}]) {
  id: ID!
  Product: Product @hasOne
  geoCordinates: String
  PinCode: Int
  picked: Boolean
  address: String
}

type ConsumerOptions @model @auth(rules: [{allow: public}, {allow: groups, groups: ["guest"], operations: [read]}]) {
  id: ID!
  name: String
  description: String
  products: [Product] @manyToMany(relationName: "ProductConsumerOptions")
}

type Product @model @auth(rules: [{allow: public}, {allow: groups, groups: ["guest"], operations: [read]}]) {
  id: ID!
  name: String!
  description: String
  ConsumerOptions: [ConsumerOptions] @manyToMany(relationName: "ProductConsumerOptions")
}
 